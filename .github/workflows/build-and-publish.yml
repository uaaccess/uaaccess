name: Build, Package, and Publish Release

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*' # Trigger on tags starting with 'v'

jobs:
  mac_build:
    name: Build and Package on MacOS
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install dependencies and run build script
        run: |
          python -m venv uaaccess_env
          source uaaccess_env/bin/activate
          pip install --upgrade pip
          cd builder
          python build_uaaccess.py
          python build_uaaccess.py zip
        env:
          BRIEFCASE_PLATFORM: macOS

      - name: Upload installer
        uses: actions/upload-artifact@v4
        with:
          name: mac-installer-package
          path: dist/*.pkg
          retention-days: 1

      - name: Upload portable
        uses: actions/upload-artifact@v4
        with:
          name: mac-portable-package
          path: dist/*.dmg
          retention-days: 1

  windows_build:
    name: Build and Package on Windows
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install Visual Studio Build Tools
        run: |
          choco install -y visualstudio2019buildtools --package-parameters "--add Microsoft.VisualStudio.Workload.VCTools --quiet --norestart"

      - name: Install dependencies and run build script
        run: |
          python -m venv uaaccess_env
          uaaccess_env\Scripts\activate
          pip install --upgrade pip
          cd builder
          python build_uaaccess.py
          python build_uaaccess.py zip
        env:
          BRIEFCASE_PLATFORM: windows

      - name: Upload installer
        uses: actions/upload-artifact@v4
        with:
          name: windows-installer-package
          path: dist/*.msi
          retention-days: 1

      - name: Upload portable
        uses: actions/upload-artifact@v4
        with:
          name: windows-portable-package
          path: dist/*.zip
          retention-days: 1

  publish:
    name: Publish Release
    runs-on: ubuntu-latest
    needs:
      - mac_build
      - windows_build
    steps:
      # Download MacOS Artifacts
      - name: Download MacOS Installer
        uses: actions/download-artifact@v4
        with:
          name: mac-installer-package
          path: artifacts/mac/installer

      - name: Download MacOS Portable
        uses: actions/download-artifact@v4
        with:
          name: mac-portable-package
          path: artifacts/mac/portable

      # Download Windows Artifacts
      - name: Download Windows Installer
        uses: actions/download-artifact@v4
        with:
          name: windows-installer-package
          path: artifacts/windows/installer

      - name: Download Windows Portable
        uses: actions/download-artifact@v4
        with:
          name: windows-portable-package
          path: artifacts/windows/portable

      # Create GitHub Release
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: |
            ### Release Notes
            - Automated release for ${{ github.ref_name }}
            - Includes MacOS and Windows builds (Installer and Portable)
          draft: true
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Upload MacOS Artifacts
      - name: Upload MacOS Installer Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/mac/installer/*.pkg
          asset_name: mac-installer.pkg
          asset_content_type: application/octet-stream

      - name: Upload MacOS Portable Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/mac/portable/*.dmg
          asset_name: mac-portable.dmg
          asset_content_type: application/octet-stream

      # Upload Windows Artifacts
      - name: Upload Windows Installer Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/windows/installer/*.msi
          asset_name: windows-installer.msi
          asset_content_type: application/octet-stream

      - name: Upload Windows Portable Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/windows/portable/*.zip
          asset_name: windows-portable.zip
          asset_content_type: application/zip
